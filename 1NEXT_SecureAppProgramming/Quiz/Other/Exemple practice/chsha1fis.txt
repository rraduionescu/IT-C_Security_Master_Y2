#include<stdio.h>
#include<malloc.h>
#include<openssl/sha.h>

#define MESSAGE_CHUNK 128 

int main()
{
	FILE* f = fopen("src.txt", "rb");
	unsigned char* buffer;
	SHA_CTX context;
	unsigned char finalDigest[SHA_DIGEST_LENGTH];
	SHA_Init(&context);
	fseek(f, 0, SEEK_END);
	int fileLength = ftell(f);
	fseek(f, 0, SEEK_SET);
	buffer = (unsigned char*)malloc(sizeof(char)*fileLength);
	fread(buffer, fileLength, 1, f);
	unsigned char* tempBuffer = buffer;
	while (fileLength > 0)
	{
		if (fileLength > MESSAGE_CHUNK)
		{
			SHA1_Update(&context, tempBuffer, MESSAGE_CHUNK);
		}
		else
		{
			SHA1_Update(&context, tempBuffer, fileLength);
		}
		fileLength -= MESSAGE_CHUNK;
		tempBuffer += MESSAGE_CHUNK;
	}
	SHA1_Final(finalDigest, &context);
	printf("Hex: ");
	for (int i = 0; i < SHA_DIGEST_LENGTH; i++)
		printf("%2X", finalDigest[i]);
	printf("\n");
	
}